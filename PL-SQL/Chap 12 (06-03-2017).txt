SQL> set lines 300
SQL> set pages 25
SQL> set serveroutput on
SQL> CREATE OR REPLACE PACKAGE comm_pkg IS
  2    v_std_comm NUMBER := 0.10;  --initialized to 0.10
  3    PROCEDURE reset_comm(p_new_comm NUMBER);
  4  END comm_pkg;
  5  /

Package created.

SQL> exit
SQL> set lines 300
SQL> set pages 20
SQL> set serveroutput on
SQL> CREATE OR REPLACE PACKAGE comm_pkg IS
  2    v_std_comm NUMBER := 0.10;  --initialized to 0.10
  3    PROCEDURE reset_comm(p_new_comm NUMBER);
  4  END comm_pkg;
  5  /

Package created.

SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY comm_pkg IS
  2    FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN IS
  3      v_max_comm employees.commission_pct%type;
  4    BEGIN
  5      SELECT MAX(commission_pct) INTO v_max_comm
  6      FROM   employees;
  7      RETURN (p_comm BETWEEN 0.0 AND v_max_comm);
  8    END validate;
  9  
 10    PROCEDURE reset_comm (p_new_comm NUMBER) IS BEGIN
 11      IF validate(p_new_comm) THEN
 12        v_std_comm := p_new_comm; -- reset public var
 13      ELSE  RAISE_APPLICATION_ERROR(
 14              -20210, 'Bad Commission');
 15      END IF;
 16    END reset_comm;
 17  END comm_pkg;
 18  /

Package body created.

SQL> execute comm_pkg.reset_comm(0.8);
BEGIN comm_pkg.reset_comm(0.8); END;

*
ERROR at line 1:
ORA-20210: Bad Commission 
ORA-06512: at "HR.COMM_PKG", line 13 
ORA-06512: at line 1 


SQL> select max(commission_pct) from employees;

MAX(COMMISSION_PCT)                                                                                                                                                                                                                                                                                         
-------------------                                                                                                                                                                                                                                                                                         
                 .5                                                                                                                                                                                                                                                                                         

SQL> execute comm_pkg.reset_comm(0.4);

PL/SQL procedure successfully completed.

SQL> begin
  2  dbms_output.put_line(comm_pkg.v_std_comm);
  3  end;
  4  /
.4                                                                                                                                                                                                                                                                                                          

PL/SQL procedure successfully completed.

SQL> CREATE OR REPLACE PACKAGE BODY comm_pkg IS
  2    FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN IS
  3      v_max_comm employees.commission_pct%type;
  4    BEGIN
  5      SELECT MAX(commission_pct) INTO v_max_comm
  6      FROM   employees;
  7      RETURN (p_comm BETWEEN 0.0 AND v_max_comm);
  8    END validate;
  9  
 10    PROCEDURE reset_comm (p_new_comm NUMBER) IS BEGIN
 11      IF validate(p_new_comm) THEN
 12        v_std_comm := p_new_comm; -- reset public var
 13      ELSE  RAISE_APPLICATION_ERROR(
 14              -20210, 'Bad Commission');
 15      END IF;
 16    END reset_comm;
 17  END comm_pkg;
 18  /

Package body created.

SQL> ed
Wrote file afiedt.buf

  1  CREATE OR REPLACE PACKAGE BODY comm_pkg IS
  2    PROCEDURE reset_comm (p_new_comm NUMBER) IS BEGIN
  3      IF validate(p_new_comm) THEN
  4        v_std_comm := p_new_comm; -- reset public var
  5      ELSE  RAISE_APPLICATION_ERROR(
  6              -20210, 'Bad Commission');
  7      END IF;
  8    END reset_comm;
  9  FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN IS
 10      v_max_comm employees.commission_pct%type;
 11    BEGIN
 12      SELECT MAX(commission_pct) INTO v_max_comm
 13      FROM   employees;
 14      RETURN (p_comm BETWEEN 0.0 AND v_max_comm);
 15    END validate;
 16* END comm_pkg;
 17  /

Warning: Package Body created with compilation errors.

SQL> show errors
Errors for PACKAGE BODY COMM_PKG:

LINE/COL ERROR                                                                                                                                                                                                                                                                                              
-------- -----------------------------------------------------------------                                                                                                                                                                                                                                  
3/5      PL/SQL: Statement ignored                                                                                                                                                                                                                                                                          
3/8      PLS-00313: 'VALIDATE' not declared in this scope                                                                                                                                                                                                                                                   
SQL> ed
Wrote file afiedt.buf

  1  CREATE OR REPLACE PACKAGE BODY comm_pkg IS
  2  FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN;  
  3  PROCEDURE reset_comm (p_new_comm NUMBER) IS BEGIN
  4      IF validate(p_new_comm) THEN
  5        v_std_comm := p_new_comm; -- reset public var
  6      ELSE  RAISE_APPLICATION_ERROR(
  7              -20210, 'Bad Commission');
  8      END IF;
  9    END reset_comm;
 10  FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN IS
 11      v_max_comm employees.commission_pct%type;
 12    BEGIN
 13      SELECT MAX(commission_pct) INTO v_max_comm
 14      FROM   employees;
 15      RETURN (p_comm BETWEEN 0.0 AND v_max_comm);
 16    END validate;
 17* END comm_pkg;
SQL> /

Package body created.

SQL> execute comm_pkg.reset_comm(0.4);

PL/SQL procedure successfully completed.

SQL> execute comm_pkg.reset_comm(0.3);

PL/SQL procedure successfully completed.

SQL> begin
  2  dbms_output.put_line(comm_pkg.v_std_comm);
  3  end;
  4  /
.3                                                                                                                                                                                                                                                                                                          

PL/SQL procedure successfully completed.

SQL> CREATE OR REPLACE PACKAGE global_consts IS
  2    c_mile_2_kilo    CONSTANT  NUMBER  :=  1.6093;
  3    c_kilo_2_mile    CONSTANT  NUMBER  :=  0.6214;
  4    c_yard_2_meter   CONSTANT  NUMBER  :=  0.9144;
  5    c_meter_2_yard   CONSTANT  NUMBER  :=  1.0936;
  6  END global_consts;
  7  /

Package created.

SQL> SET SERVEROUTPUT ON
SQL> 
SQL> BEGIN
  2    DBMS_OUTPUT.PUT_LINE('20 miles = ' ||
  3          20 * global_consts.c_mile_2_kilo || ' km');
  4  END;
  5  /
20 miles = 32.186 km                                                                                                                                                                                                                                                                                        

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> 
SQL> CREATE FUNCTION mtr2yrd(p_m NUMBER) RETURN NUMBER IS
  2  BEGIN
  3    RETURN (p_m * global_consts.c_meter_2_yard);
  4  END mtr2yrd;
  5  /
CREATE FUNCTION mtr2yrd(p_m NUMBER) RETURN NUMBER IS
                *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> EXECUTE DBMS_OUTPUT.PUT_LINE(mtr2yrd(1))
1.0936                                                                                                                                                                                                                                                                                                      

PL/SQL procedure successfully completed.

SQL> SELECT text
  2  FROM   user_source
  3  WHERE  name = 'COMM_PKG' AND type = 'PACKAGE'
  4  ORDER BY LINE;

TEXT                                                                                                                                                                                                                                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PACKAGE comm_pkg IS                                                                                                                                                                                                                                                                                         
  v_std_comm NUMBER := 0.10;  --initialized to 0.10                                                                                                                                                                                                                                                         
  PROCEDURE reset_comm(p_new_comm NUMBER);                                                                                                                                                                                                                                                                  
END comm_pkg;                                                                                                                                                                                                                                                                                               

SQL> SELECT text
  2  FROM   user_source
  3  WHERE  name = 'COMM_PKG' AND type = 'PACKAGE BODY'
  4  ORDER BY LINE;

TEXT                                                                                                                                                                                                                                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PACKAGE BODY comm_pkg IS                                                                                                                                                                                                                                                                                    
FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN;                                                                                                                                                                                                                                                            
PROCEDURE reset_comm (p_new_comm NUMBER) IS BEGIN                                                                                                                                                                                                                                                           
    IF validate(p_new_comm) THEN                                                                                                                                                                                                                                                                            
      v_std_comm := p_new_comm; -- reset public var                                                                                                                                                                                                                                                         
    ELSE  RAISE_APPLICATION_ERROR(                                                                                                                                                                                                                                                                          
            -20210, 'Bad Commission');                                                                                                                                                                                                                                                                      
    END IF;                                                                                                                                                                                                                                                                                                 
  END reset_comm;                                                                                                                                                                                                                                                                                           
FUNCTION validate(p_comm NUMBER) RETURN BOOLEAN IS                                                                                                                                                                                                                                                          
    v_max_comm employees.commission_pct%type;                                                                                                                                                                                                                                                               
  BEGIN                                                                                                                                                                                                                                                                                                     
    SELECT MAX(commission_pct) INTO v_max_comm                                                                                                                                                                                                                                                              
    FROM   employees;                                                                                                                                                                                                                                                                                       
    RETURN (p_comm BETWEEN 0.0 AND v_max_comm);                                                                                                                                                                                                                                                             
  END validate;                                                                                                                                                                                                                                                                                             
END comm_pkg;                                                                                                                                                                                                                                                                                               

17 rows selected.

SQL> exit
